ls()
load("C:\\Users\\Otavio Cals\\Desktop\\Professional\\Scripts\\Cryptography Server\\.RData")
install.packages("sodium")
require("sodium")
!require("sodium")
source("Scripts/pkgTest.R")
pkgTest("sodium")
sha512("foo")
sha512(chartoraw("foo"))
sha512(charToRaw("foo"))
sha512(charToRaw("food"))
identical(1,1)
identical(1,2)
identical(sha512(charToRaw("1")),2)
identical(sha512(charToRaw("1")),sha512(charToRaw("1")))
identical(sha512(charToRaw("1")),sha512(charToRaw("2")))
source("Scripts/vrfy_usr.R")
vrfy_usr(1,2)
user_data <- 1
vrfy_usr(1,2)
user_data <- data.frame()
vrfy_usr(1,2)
user_data <- rbind(user_data,c(sha512(charToRaw("John_C")), sha512(charToRaw("hehe"))))
user_data <- rbind(user_data,list(sha512(charToRaw("John_C")), sha512(charToRaw("hehe"))))
user_data <- rbind(user_data,c(sha512(charToRaw("John_C")), sha512(charToRaw("hehe"))))
c(sha512(charToRaw("John_C")), sha512(charToRaw("hehe")))
user_data <- rbind(user_data,array(sha512(charToRaw("John_C")), sha512(charToRaw("hehe"))))
array(sha512(charToRaw("John_C")), sha512(charToRaw("hehe")))
array(sha512(charToRaw("John_C")) , sha512(charToRaw("hehe")) )
vector(sha512(charToRaw("John_C")) , sha512(charToRaw("hehe")) )
length(sha512(charToRaw("John_C")) , sha512(charToRaw("hehe")) )
c(sha512(charToRaw("John_C")) , sha512(charToRaw("hehe")) )
list(sha512(charToRaw("John_C")) , sha512(charToRaw("hehe")) )
list("User" = sha512(charToRaw("John_C")) , "Pass" =sha512(charToRaw("hehe")) )
list("User" = sha512(charToRaw("John_C")) , "Pass" = sha512(charToRaw("hehe")) )
a<-list("User" = sha512(charToRaw("John_C")) , "Pass" = sha512(charToRaw("hehe")) )
a
user_data <- data.frame(User,Pass)
user_data <- data.frame("User","Pass")
user_data
user_data <- data.frame(a)
user_data
a<-list("User" = paste0(sha512(charToRaw("John_C"))) , "Pass" = sha512(charToRaw("hehe")) )
user_data
user_data <- data.frame(a)
user_data
a<-list("User" = as.String(sha512(charToRaw("John_C"))) , "Pass" = sha512(charToRaw("hehe")) )
a<-list("User" = toString(sha512(charToRaw("John_C"))) , "Pass" = sha512(charToRaw("hehe")) )
a
a<-list("User" = paste0(toString(sha512(charToRaw("John_C")))) , "Pass" = sha512(charToRaw("hehe")) )
a
a<-list("User" = sha512(charToRaw("John_C")) , "Pass" = sha512(charToRaw("hehe")) )
a
a<-list("User" = charToRaw(sha512(charToRaw("John_C"))) , "Pass" = sha512(charToRaw("hehe")) )
a<-list("User" = charToRaw(sha512("John_C")) , "Pass" = sha512(charToRaw("hehe")) )
a<-list("User" = charToRaw(sha512(charToRaw("John_C"))) , "Pass" = sha512(charToRaw("hehe")) )
a<-list("User" = sha512(charToRaw("John_C")) , "Pass" = sha512(charToRaw("hehe")) )
a
a<-list("User" = binToHex(sha512(charToRaw("John_C"))) , "Pass" = sha512(charToRaw("hehe")) )
a<-list("User" = bin2hex(sha512(charToRaw("John_C"))) , "Pass" = sha512(charToRaw("hehe")) )
a
a<-list("User" = bin2hex(sha512(charToRaw("John_C"))) , "Pass" = bin2hex(sha512(charToRaw("hehe"))) )
a
user_data <- data.frame(a)
user_data
user_data <- rbind(user_data,a)
user_data
exists(user_data)
exists("user_data")
exists("user_datas")
source("Scripts/database_add.R")
database_add("John_C","hehe")
source("Scripts/database_add.R")
database_add("John_C","hehe")
database_add("John_C","hehe")
user_data <- database_add("John_C","hehe")
database_add("John_C","hehe")
user_data <- data.frame()
database_add("John_C","hehe")
database_add("John_C","hehe")
database_add("John_C","hehe")[1,]
database_add("John_C","hehe")[2,]
database_add("John_C","hehe")
database_add("John_C","hehe")[0,]
user_data
nrow(user_data)
nrow(database_add("John_C","hehe")[0,])
nrow(database_add("John_C","hehe"))
source("Scripts/database_add.R")
user_data
database_add("John_C","hehe")[0,]
database_add("John_C","hehe")
user_data <- database_add("John_C","hehe")
user_data
database_add("John_C","hehe")
vrfy_usr("John_C","hehe")
is.na(hehe)
source("Scripts/vrfy_usr.R")
vrfy_usr("John_C","hehe")
user_data
source("Scripts/vrfy_usr.R")
vrfy_usr("John_C","hehe")
source("Scripts/vrfy_usr.R")
vrfy_usr("John_C","hehe")
source("Scripts/vrfy_usr.R")
vrfy_usr("John_C","hehe")
source("Scripts/vrfy_usr.R")
vrfy_usr("John_C","hehe")
source("Scripts/vrfy_usr.R")
vrfy_usr("John_C","hehe")
source("Scripts/vrfy_usr.R")
vrfy_usr("John_C","hehe")
source("Scripts/vrfy_usr.R")
vrfy_usr("John_C","hehe")
source("Scripts/vrfy_usr.R")
vrfy_usr("John_C","hehe")
vrfy_usr("John_c","hehe")
source("Scripts/vrfy_usr.R")
vrfy_usr("John_C","hehe")
vrfy_usr("John_c","hehe")
vrfy_usr("John_C","ehe")
vrfy_usr("John_C","hehe")
source("Scripts/vrfy_usr.R")
vrfy_usr("John_C","hehe")
vrfy_usr("John_C","ehe")
user_data
user_data <- database_add("Will_T","haha")
user_data
database_add("Will_T","haha")
source("Scripts/database_add.R")
database_add("Will_T","haha")
source("Scripts/database_add.R")
database_add("Will_T","haha")
user_data <- data.frame()
database_add("Will_T","haha")
user_data <- database_add("Will_T","haha")
database_add("Will_T","haha")
source("Scripts/database_add.R")
database_add("Will_T","haha")
source("Scripts/database_add.R")
database_add("Will_T","haha")
user_data
database_add("Will_T","haha")
source("Scripts/database_add.R")
database_add("Will_T","haha")
source("Scripts/database_add.R")
database_add("Will_T","haha")
source("Scripts/database_add.R")
database_add("Will_T","haha")
user_data
user_data[1]
user_data[2]
source("Scripts/database_add.R")
database_add("Will_T","haha")
source("Scripts/database_add.R")
database_add("Will_T","haha")
source("Scripts/database_add.R")
database_add("Will_T","haha")
source("Scripts/database_add.R")
database_add("Will_T","haha")
user_data
user_data[1]
user_data[[1]]
source("Scripts/database_add.R")
user_data[[1]]
database_add("Will_T","haha")
user_data[[1]]
source("Scripts/database_add.R")
database_add("Will_T","haha")
input_data <- list("User" = bin2hex(sha512(charToRaw(user))), "Pass" = bin2hex(sha512(charToRaw(pass))) )
input_data <- list("User" = bin2hex(sha512(charToRaw("user"))), "Pass" = bin2hex(sha512(charToRaw("pass"))) )
input_data[1]
input_data[[1]]
user_data[1]
user_data[[1]]
user_data
input_data
rbind(input_data,user_data)
rbind(input_data[1],user_data[1])
rbind(input_data[[1]],user_data[1])
rbind(input_data[1],user_data[[1]])
merge(input_data,user_data)
merge(as.data.Frame(input_data),user_data)
merge(data.Frame(input_data),user_data)
merge(data.frame(input_data),user_data)
merge(input_data,user_data)
input_data <- data.frame("User" = bin2hex(sha512(charToRaw("user"))), "Pass" = bin2hex(sha512(charToRaw("pass"))) )
input_data
merge(input_data,user_data)
source("Scripts/database_add.R")
database_add("dasdas","heuhueh")
source("Scripts/database_add.R")
database_add("dasdas","heuhueh")
source("Scripts/database_add.R")
database_add("dasdas","heuhueh")
source("Scripts/database_add.R")
database_add("dasdas","heuhueh")
source("Scripts/database_add.R")
database_add("dasdas","heuhueh")
source("Scripts/database_add.R")
database_add("dasdas","heuhueh")
user_data <- data.frame()
source("Scripts/database_add.R")
database_add("dasdas","heuhueh")
user_data <- database_add("dasdas","heuhueh")
database_add("dasdas","heuhueh")
database_add("dasdas","heuhueh")
user_data
database_add("dasdas","heuhueh")
source("Scripts/database_add.R")
database_add("dasdas","heuhueh")
rrow(user_data)
nrow(user_data)
source("Scripts/database_add.R")
database_add("dasdas","heuhueh")
database_add("dasdfgdfdas","heuhuefdgdh")
source("Scripts/database_add.R")
database_add("dasdfgdfdas","heuhuefdgdh")
source("Scripts/database_add.R")
database_add("dasdfgdfdas","heuhuefdgdh")
source("Scripts/database_add.R")
database_add("dasdfgdfdas","heuhuefdgdh")
user_data <- database_add("dasdfgdfdas","heuhuefdgdh")
user_data <- database_add("dasdfgs","uefdgdh")
user_data <- database_add("dassdfsdfdfgs","usdfefdgdh")
user_data
user_data <- database_add("John_C","hehe")
user_data <- database_add("Johfsdfsdfn_C","hsdfsdfehe")
vrfy_usr("John_C","hehe")
source("Scripts/vrfy_usr.R")
vrfy_usr("John_C","hehe")
source("Scripts/vrfy_usr.R")
vrfy_usr("John_C","hehe")
source("Scripts/vrfy_usr.R")
vrfy_usr("John_C","hehe")
source("Scripts/vrfy_usr.R")
vrfy_usr("John_C","hehe")
source("Scripts/vrfy_usr.R")
vrfy_usr("John_C","hehe")
source("Scripts/vrfy_usr.R")
vrfy_usr("John_C","hehe")
source("Scripts/vrfy_usr.R")
vrfy_usr("John_C","hehe")
source("Scripts/vrfy_usr.R")
vrfy_usr("John_C","hehe")
source("Scripts/vrfy_usr.R")
vrfy_usr("John_C","hehe")
source("Scripts/vrfy_usr.R")
vrfy_usr("John_C","hehe")
source("Scripts/vrfy_usr.R")
vrfy_usr("John_C","hehe")
source("Scripts/vrfy_usr.R")
vrfy_usr("John_C","hehe")
source("Scripts/vrfy_usr.R")
vrfy_usr("John_C","hehe")
user_data <- database_add("John_C","hehe")
vrfy_usr("John_C","hehe")
source("Scripts/vrfy_usr.R")
user_data <- database_add("Johsdfsdfn_C","hsdfsdehe")
vrfy_usr("John_C","hehe")
source("Scripts/vrfy_usr.R")
vrfy_usr("John_C","hehe")
source("Scripts/vrfy_usr.R")
vrfy_usr("John_C","hehe")
source("Scripts/vrfy_usr.R")
vrfy_usr("John_C","hehe")
source("Scripts/vrfy_usr.R")
vrfy_usr("John_C","hehe")
vrfy_usr("John_C","hehdase")
source("Scripts/vrfy_usr.R")
vrfy_usr("John_C","hehdase")
vrfy_usr("John_C","hehe")
vrfy_usr("Johnsdf_C","hehe")
vrfy_usr("John_C","hehe")
source("Scripts/vrfy_usr.R")
vrfy_usr("John_C","hehe")
vrfy_usr("Johnsdf_C","hehe")
vrfy_usr("John_C","hehe")
vrfy_usr("John_C","hehdase")
t <- vrfy_usr("John_C","hehdase")
t
t <- vrfy_usr("John_C","hehe")
t
source("Scripts/submit_usr.R")
submit_usr("John_C","hehe")
source("Scripts/vrfy_usr.R")
submit_usr("John_C","hehe")
t <- vrfy_usr(submit_usr("John_C","hehe"))
source("Scripts/vrfy_usr.R")
t <- vrfy_usr(submit_usr("John_C","hehe"))
t
source("Scripts/vrfy_usr.R")
input_sent <- submit_usr("John_C","hehe")
t <- vrfy_usr(input_sent)
t
save.image("C:\\Users\\Otavio Cals\\Desktop\\Professional\\Scripts\\Cryptography\\.RData")
q()
ls()
source("Scripts/crypt_client.R")
crypt_client(192.168.25.48)
crypt_client("192.168.25.48")
crypt_client("192.168.25.48")
q
crypt_client("192.168.25.48")
crypt_client("192.168.25.48")
2
 q
q
crypt_client("192.168.25.48")
text
text
text
asd
submit_usr("hehe",auhuah)
submit_usr("hehe","auhuah")
c("hehe","haha")
c("hehe","haha")[1]
c("hehe","haha")[2]
c("hehe","haha")[3]
length(c("hehe","haha"))
source("Scripts/pkgTest.R")
pkgTest("sodium")
pkgTest("sodiasdasd")
source("Scripts/pkgTest.R")
pkgTest("sodiasdasd")
source("Scripts/pkgTest.R")
pkgTest("sodiasdasd")
source("Scripts/pkgTest.R")
pkgTest("sodiasdasd")
source("Scripts/pkgTest.R")
pkgTest("sodiasdasd")
source("Scripts/pkgTest.R")
pkgTest("sodiasdasd")
pkgTest("sodium")
source("Scripts/crypt_client.R")
crypt_client()
source("Scripts/crypt_client.R")
crypt_client()
source("Scripts/crypt_client.R")
crypt_client()
source("Scripts/crypt_client.R")
crypt_client()
source("Scripts/crypt_client.R")
crypt_client()
source("Scripts/crypt_client.R")
source("Scripts/submit_usr.R")
submit_usr("john","hehe")
length(submit_usr("john","hehe"))
nchar(submit_usr("john","hehe"))
sha512example <- submit_usr("john","hehe")
sha512example
sha512example[1]
sha512example[1:10]
sha512example[[1]]
substr(sha512example,1,5)
substr(sha512example,1,128)
length(substr(sha512example,1,128))
nchar(substr(sha512example,1,128))
nchar(substr(sha512example,129,256))
source("Scripts/server_user_data_parser.R")
server_user_data_parser(sha512example)
ls()
user_data
save.image("C:\\Users\\Otavio Cals\\Desktop\\Professional\\Scripts\\Cryptography Server\\.RData")
save.image("C:\\Users\\Otavio Cals\\Desktop\\Professional\\Scripts\\Cryptography Server\\.RData")
user_data
save(user_data,file="user_data")
unlink("user_data")
save(user_data,file="Data/user_data")
unlink("Data/user_data")
save(user_data,file="Data/user_data")
load("Data/user_data")
ls()
a
unlink(a)
ls()
rm(a)
ls()
input_data
rm(input_data)
ls()
input_sent
rm(input_sent)
ls()
t
rm(t)
sha512example
rm(sha512example)
ls()
user_data
rm(user_data)
ls()
user_data
load("Data/user_data")
ls()
rm(user_data)
save.image("C:\\Users\\Otavio Cals\\Desktop\\Professional\\Scripts\\Cryptography Server\\.RData")
ls()
save.image("C:\\Users\\Otavio Cals\\Desktop\\Professional\\Scripts\\Cryptography Server\\.RData")
